$date
  Sun May 19 20:51:35 2019
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module lu_tb $end
$var reg 16 ! op1_tb[15:0] $end
$var reg 16 " op2_tb[15:0] $end
$var reg 16 # res_tb[15:0] $end
$var reg 4 $ flags_tb[3:0] $end
$var reg 1 % and_tb $end
$var reg 1 & or_tb $end
$var reg 1 ' xor_tb $end
$var reg 1 ( not_tb $end
$scope module dut $end
$var reg 16 ) i_op1[15:0] $end
$var reg 16 * i_op2[15:0] $end
$var reg 1 + i_and $end
$var reg 1 , i_or $end
$var reg 1 - i_xor $end
$var reg 1 . i_not $end
$var reg 16 / o_res[15:0] $end
$var reg 4 0 o_flags[3:0] $end
$var reg 16 1 res[15:0] $end
$var reg 1 2 lu_z $end
$var reg 1 3 lu_f $end
$var reg 1 4 lu_c $end
$var reg 1 5 lu_n $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0111001010010001 !
b0111100111100101 "
b0111000010000001 #
b0000 $
1%
0&
0'
0(
b0111001010010001 )
b0111100111100101 *
1+
0,
0-
0.
b0111000010000001 /
b0000 0
b0111000010000001 1
02
03
04
05
#1000000
b1001001010100001 !
b1000010001010101 "
b1000000000000001 #
b0001 $
b1001001010100001 )
b1000010001010101 *
b1000000000000001 /
b0001 0
b1000000000000001 1
15
#2000000
b0000000000000000 !
b0000000000000000 "
b0000000000000000 #
b1000 $
b0000000000000000 )
b0000000000000000 *
b0000000000000000 /
b1000 0
b0000000000000000 1
12
05
#3000000
b1111111111111111 !
b1111111111111111 "
b1111111111111111 #
b0001 $
b1111111111111111 )
b1111111111111111 *
b1111111111111111 /
b0001 0
b1111111111111111 1
02
15
#4000000
b1001001010100001 !
b1000010001010101 "
b1001011011110101 #
0%
1&
b1001001010100001 )
b1000010001010101 *
0+
1,
b1001011011110101 /
b1001011011110101 1
#5000000
b1111111111111111 !
b0000000000000000 "
b1111111111111111 #
b1111111111111111 )
b0000000000000000 *
b1111111111111111 /
b1111111111111111 1
#6000000
b0000000000000000 !
b0000000000000000 #
b1000 $
b0000000000000000 )
b0000000000000000 /
b1000 0
b0000000000000000 1
12
05
#7000000
b1111111111111111 !
b1111111111111111 "
b1111111111111111 #
b0001 $
b1111111111111111 )
b1111111111111111 *
b1111111111111111 /
b0001 0
b1111111111111111 1
02
15
#8000000
b0100100110011101 !
b0111001010110101 "
b0011101100101000 #
b0000 $
0&
1'
b0100100110011101 )
b0111001010110101 *
0,
1-
b0011101100101000 /
b0000 0
b0011101100101000 1
05
#9000000
b1111111111111111 !
b0000000000000000 "
b1111111111111111 #
b0001 $
b1111111111111111 )
b0000000000000000 *
b1111111111111111 /
b0001 0
b1111111111111111 1
15
#10000000
b0000000000000000 !
b0000000000000000 #
b1000 $
b0000000000000000 )
b0000000000000000 /
b1000 0
b0000000000000000 1
12
05
#11000000
b1111111111111111 !
b1111111111111111 "
b1111111111111111 )
b1111111111111111 *
#12000000
b0000000000000000 !
b0000000000000000 "
b1111111111111111 #
b0001 $
0'
1(
b0000000000000000 )
b0000000000000000 *
0-
1.
b1111111111111111 /
b0001 0
b1111111111111111 1
02
15
#13000000
b1111111111111111 !
b0000000000000000 #
b1000 $
b1111111111111111 )
b0000000000000000 /
b1000 0
b0000000000000000 1
12
05
#14000000
b0100100101000101 !
b0100110110000001 "
b1011011010111010 #
b0001 $
b0100100101000101 )
b0100110110000001 *
b1011011010111010 /
b0001 0
b1011011010111010 1
02
15
#15000000
